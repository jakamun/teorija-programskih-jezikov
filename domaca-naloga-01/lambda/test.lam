LET reverse = REC reverse acc -> FUN sez ->
    MATCH sez WITH
    | [] -> acc
    | x :: xs -> reverse (x :: acc) xs 
IN
LET split = REC split acc1 -> FUN acc2 -> FUN sez ->
    MATCH sez WITH
    | [] -> {reverse [] acc1, reverse [] acc2}
    | x :: xs -> split ((FST x) :: acc1) ((SND x) :: acc2) xs
IN
split [] [] ({7, 3} :: {4, 2} :: [])
